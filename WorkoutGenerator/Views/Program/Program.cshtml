@using Microsoft.AspNetCore.Identity
@using WorkoutGenerator.Data
@using WorkoutGenerator.Extentions
@model ProgramViewModel
@inject SignInManager<ApplicationUser> SignInManager

@section Head
{
    <link href="~/lib/jquery-ui-1.12.1/jquery-ui.min.css" rel="stylesheet" />
    <style>
        ul.tabs{
            margin: 15px 0px;
            padding: 0px;
            list-style: none;
            border: 2px solid #8187ff;
        }
        ul.tabs li{
            background: none;
            color: #222;
            display: inline-block;
            padding: 10px 15px;
            cursor: pointer;
        }

        ul.tabs li.current{
            background: #8187ff;
            color: white;
        }

        .tab-content{
            display: none;
        }

        .tab-content.current{
            display: inherit;
        }

        .disabled {
            cursor: none;
            pointer-events: none;
            border: 1px solid gray;
            color: gray;
            opacity: 0.4 !important;
        }
    </style>
}

<div class="container my-5" id="#vueApp">
    <div class="row no-gutters center-div">
        
        <div class="col-12 col-lg-6  d-flex flex-column">
            <div class="d-flex">
                <p class="font-weight-bold">
                    Program Type:
                    <span class="color-second font-weight-bold ml-2">@Model.TemplateViewModel.TemplateType.Description()</span>
                </p>
            </div>
            <label class="font-weight-bold">Instructions:</label>
            <p>Workout should be done @Model.TemplateViewModel.DaysType.Description(). This program's difficulty is <span class="color-second font-weight-bold">@Model.TemplateViewModel.TrainerLevelType</span> </p>
            @{

                if (!SignInManager.IsSignedIn(User))
                {
                    <div class="card p-3 text-white bg-main my-4 text-center">
                        <p>
                            Shall we save your workout?
                        </p>
                        <div>
                            <button data-toggle="modal" data-target="#registerAndSaveModal" class="btn bg-white color-main d-inline-block">Sign up to save this workout</button>
                        </div>
                    </div>
                    <div class="modal fade" tabindex="-1" role="dialog" id="registerAndSaveModal">

                        <partial name="Register/_RegisterPartial" model="@new RegisterViewModel(){ReturnUrl = @Url.Action("SaveProgramToUser", "Program", new {created = @Model.Created}) }"/>

                    </div>
                }
                else if (Model.ApplicationIdNull)
                {
                    <form class="center-div" asp-controller="Program" asp-action="SaveProgramToUser" asp-route-created="@Model.Created">
                        <div class="card p-3 my-3 d-inline-block text-center">
                            <p>Like this program? Don't lose it by saving it to yourself.</p>
                            <button type="submit" class="btn bg-main text-white">Save Workout</button>

                        </div>
                    </form>
                }
            }


        </div>

       
    </div>
    <div class="row no-gutters center-div">
        
        <div class="col-12 col-lg-6">
            <ul class="tabs row no-gutters" role="tablist">

                <li class="tab-link current col text-center" data-tab="tab-0">
                    Show All
                </li>

                @{
                    if (Model.TemplateViewModel.Workouts.Count > 1)
                    {
                        @foreach (var item in Model.TemplateViewModel.Workouts)
                        {
                            <li class="tab-link col text-center" data-tab="@($"workout{item.Name}")">
                                @item.Name
                            </li>
                        }
                    }
                }

            </ul>

        </div>

    </div>

    <div class="row no-gutters center-div">

        <div class="col-12 col-lg-6 ">
            @foreach (var workoutViewModel in Model.TemplateViewModel.Workouts)
            {
                <div class="tab-content current" role="tabpanel" id="@($"workout{@workoutViewModel.Name}")">

                    <div class="card mt-3 w-100">
                        <div class="bg-main p-2 text-white d-flex">

                            <p class="flex-grow-1 d-flex  mb-0 v-align">Workout @workoutViewModel.Name</p>
                            <button data-url="@Url.Action("ProgressPartialAjax", "Workout", new {workoutViewModel.Id})" class="progressAjax btn bg-second text-white">Progress</button>
                        </div>
                        <div id="@($"workout_history{@workoutViewModel.Name}")">
                            <partial name="Program/_WorkoutHistoryPartial" model="@workoutViewModel.WorkoutHistoryViewModel" />

                        </div>

                    </div>

                </div>
            }

        </div>

    </div>
    <div class="row no-gutters">
        <div class="d-flex justify-content-center col-12">
            <button id="scrollToTopBtn" class="btn bg-main text-white my-5">Scroll To Top</button>
        </div>
    </div>


</div>


<div class="modal fade" id="videoModal" tabindex="-1" role="dialog" aria-labelledby="videoModal" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            @*<button type="button" class="close btn-round btn-primary" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>*@
            <div class="embed-responsive embed-responsive-16by9">
                <iframe class="embed-responsive-item" src="" allowfullscreen></iframe>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/lib/jquery-ui-1.12.1/jquery-ui.min.js"></script>
    <script src="~/lib/vuejs/vue.js"></script>
    <script src="~/lib/modal-video/modal-video.js"></script>
    <script>
        $(function() {


            $('ul.tabs li').click(function() {
                var tab_id = $(this).attr('data-tab');
                $('ul.tabs li').removeClass('current');
                $('.tab-content').removeClass('current');

                if (tab_id == 'tab-0') {
                    $('.tab-content').addClass('current');
                } else {
                    $("#" + tab_id).addClass('current');
                }
                $(this).addClass('current');

            });

            $("#scrollToTopBtn").on('click',
                function() {
                    $('html,body').animate({ scrollTop: 0 }, 'slow');
                });

            $('.videoModalTriger').on('click',
                function() {
                    var theModal = $(this).data("target");
                    var videoSRC = $(this).attr("data-videoModal");
                    var videoSRCauto = videoSRC + "?autoplay=1";
                    $(theModal + ' iframe').attr('src', videoSRCauto);
                    $(theModal).on('hidden.bs.modal',
                        function(e) {
                            $(theModal + ' iframe').attr('src', '');
                        });
                });
            $('.progressAjax').on('click',
                function() {
                    var url = $(this).data('url');
                    $.ajax({
                        url: url,
                        type: 'POST',
                        headers: {
                            RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                        },
                        processData: true,
                        contentType: "application/json; charset=utf-8",
                        success: function(data) {
                            $('#workout_history' + data.name).html(data.partial.result);
                        }.bind(this),
                        error: function(XMLHttpRequest, textStatus, errorThrown) {
                            alert('fuck');
                        }
                    });
                });

            $('.select-exercise-modal ').on('click','button',
                function() {
                    $('.select-exercise-modal select').val();
                    var data = {
                        exerciseId: $(this).data('exerciseid'),
                        exerciseName:  $(this).closest('.select-exercise-modal').find('select').val()
                    }
                    $.ajax({
                        url: "@Url.Action("ChangeExercise","Exercise")",
                        data: JSON.stringify(data),
                        type: 'POST',
                        headers: {
                            RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                        },
                        processData: true,
                        dataType: 'json',
                        contentType: "application/json; charset=utf-8",
                        success: function (res) {
                            var exerciseId = $(this).data('exerciseid');
                            $('#exercise' + exerciseId).text(res.name);
                            $('#exercise' + exerciseId).attr('data-videomodal', 'https://www.youtube.com/embed/'+res.linkId);
                        }.bind(this),
                        error: function(XMLHttpRequest, textStatus, errorThrown) {
                        }
                    });
                });
        });
    </script>
}